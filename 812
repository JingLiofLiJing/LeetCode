'''
You have a list of points in the plane. Return the area of the largest triangle that can be formed by any 3 of the points.

Example:
Input: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]
Output: 2
Explanation: 
The five points are show in the figure below. The red triangle is the largest.


Notes:

3 <= points.length <= 50.
No points will be duplicated.
 -50 <= points[i][j] <= 50.
'''
class Solution:
    def largestTriangleArea(self, points):
        """ Time complexity: O(n ^ 3). Space complexity: O(1), n is len(points).
        """
        max_area = 0
        n = len(points)
        for p1 in range(n - 2):
            for p2 in range(p1 + 1, n - 1):
                for p3 in range(p2 + 1, n):
                    x1, y1 = points[p1]
                    x2, y2 = points[p2]
                    x3, y3 = points[p3]
                    # calculate area using Shoelace formula
                    # area = abs(x1 * y2 + x2 * y3 + x3 * y1 - x1 * y3 - x3 * y2 - x2 * y1) * 0.5
                    area = abs(x1 * (y2 - y3)
                               + x2 * (y3 - y1)
                               + x3 * (y1 - y2)) * 0.5  # simplified formula
                    max_area = max(max_area, area)
        return max_area
