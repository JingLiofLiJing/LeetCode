Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h. Write an algorithm to reconstruct the queue.

Note:
The number of people is less than 1,100.


Example

Input:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]

Output:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]

class Solution(object):
    def reconstructQueue(self, people):
        """
        :type people: List[List[int]]
        :rtype: List[List[int]]
        """
        if not people:
            return []
        dict,res = {},[]
        for tall,bef in people:
            dict.setdefault(tall,[])
            dict[tall].append(bef)
        keys = dict.keys()
        keys.sort(reverse = True)
        #按身高对里面的编号进行排序
        for key in keys:
            vs = sorted(dict[key])
            print(vs)
            for v in vs:
                #从大到小进行插入，小的对大的没有影响，小的在插入式只要根据自己前面的不低人数来进行对应index插入
                #即可，比如前面有一个就插入到1的位置
                res.insert(v,[key,v])
        return(res)
