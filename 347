'''
Given a non-empty array of integers, return the k most frequent elements.

For example,
Given [1,1,1,2,2,3] and k = 2, return [1,2].

Note: 
You may assume k is always valid, 1 ≤ k ≤ number of unique elements.
Your algorithm's time complexity must be better than O(n log n), where n is the array's size.

'''
class Solution(object):
    def topKFrequent(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """
        dict = {}
        for num in nums:
            dict[num] = dict.get(num,0)+1
        lst = [[kk,vv] for kk,vv in dict.items()]
        lst.sort(key = lambda x:x[1],reverse = True)
        return [lst[i][0] for i in range(k)]
