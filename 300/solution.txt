解题思路：
动态规划设计一个tmps数组，数组第i位置表示目前长度为i+1的递增子串的最后一个数的最小值是多少。
假设[10,9,2,5,3,7,101,18]的输入数组：
    1. 首先tmps数组为[10]，表示遍历到第一个数字的时候长度为1的递增子串的最后一位最小为10（目前只有一个数）
    2. 后面的数字进来时，在tmps数组中二分查找第一个不小于当前数字的数字的下标（假设为i），此时i前面的数字表示小于i+1长度的递增子串的最后一位数都小于该数字不用变，当前i+1长度的数字如果大于进入的数字则用当前数字替换，表示目前为止长度为i+1的递增子串的最大数更小，后面更有机会拼接成更长的串；i后面下标的数字表示长度大于i+1的子串的最后一个数字更大，当前数字并不能往后接；
    3. 若匹配到的i的位置正好是最后一位并且更小，则可以接上使得最长长度加1并且最后一位为新来的数字，表现为tmps往后扩充一个元素。
    4. 思想：当前状态下数字的加入匹配到的位置i不会影响i之前的序列的结果，同时尽量保证每个长度的最后一个最大数字尽可能小让后面的接上变得更长。
