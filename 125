'''
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

Note: For the purpose of this problem, we define empty string as valid palindrome.

Example 1:

Input: "A man, a plan, a canal: Panama"
Output: true
Example 2:

Input: "race a car"
Output: false
'''
class Solution(object):
    def isPalindrome(self, s):
        """
        :type s: str
        :rtype: bool
        #由于空白字符过滤后的start>=end为True，所以False只需考虑start<end时候的不相等即可
        """
        start,end = 0,len(s)-1
        while start < end:
            while start<len(s) and not s[start].isalpha() and not s[start].isdigit():
                start += 1
            while end >=0 and not s[end].isalpha() and not s[end].isdigit():
                end -= 1
            # print( s[start], s[end])
            if start < end and s[start].lower() != s[end].lower():
                return False
            start += 1
            end -= 1
        return True
